{"version":3,"sources":["components/layout/SignedInLinks.js","actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","actions/projectActions.js","App.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","registerServiceWorker.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signout","getState","getFirebase","auth","signOut","then","type","props","className","to","onClick","SignedOutLinks","state","firebase","profile","console","log","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","moment","toDate","calendar","ProjectList","projects","map","id","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","firstName","lastName","initials","CreateProject","createProject","history","push","required","add","Date","App","exact","path","component","ProjectDetails","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","registerServiceWorker"],"mappings":"8MAyBeA,cAAQ,MANI,SAACC,GAC1B,MAAM,CACJC,QAAS,kBAAMD,GCJR,SAACA,EAASE,EAAV,IAEYC,EADnB,EAD2BA,eAIdC,OAAOC,UAAUC,MAAK,WAC3BN,EAAS,CAAEO,KAAM,8BDGdR,EApBO,SAACS,GACrB,OACE,8BACE,qBAAIC,UAAU,QAAd,UACE,6BAAI,cAAC,IAAD,CAASC,GAAG,UAAZ,2BAEJ,6BAAI,cAAC,IAAD,CAASA,GAAG,IAAZ,wBAEF,6BAAI,mBAAGC,QAASH,EAAMP,QAASQ,UAAU,0BAArC,+BEECG,EAZQ,WACrB,OACE,8BACE,qBAAIH,UAAU,QAAd,UACE,6BAAI,cAAC,IAAD,CAASC,GAAG,UAAZ,sBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,UAAZ,4BCmBGX,eANS,SAACc,GACvB,MAAM,CACJT,KAAMS,EAAMC,SAASV,KACrBW,QAASF,EAAMC,SAASC,WAGbhB,EAtBA,SAACS,GACZ,IAAQJ,EAAgBI,EAAhBJ,KAAMW,EAAUP,EAAVO,QACdC,QAAQC,IAAIb,GACZ,IAAMc,EAAOd,EAAKe,IAAM,cAAC,EAAD,CAAeJ,QAASA,IAAa,cAAC,EAAD,IAC7D,OACA,qBAAKN,UAAU,4BAAf,SACI,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,kBAAvB,qBACES,U,iDCGGE,EAdQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACI,qBAAKZ,UAAU,iCAAf,SACA,sBAAKA,UAAU,uCAAf,UACE,sBAAMA,UAAU,cAAhB,SAA+BY,EAAQC,QACvC,+CAAkBD,EAAQE,gBAA1B,IAA4CF,EAAQG,kBACpD,oBAAGf,UAAU,YAAb,UAA0BY,EAAQI,UAC9BC,IAAOL,EAAQI,UAAUE,UAAUC,WACnC,gBAFJ,aCUKC,EAdK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACpB,OACE,qBAAKrB,UAAU,uBAAf,SACIqB,GAAYA,EAASC,KAAI,SAAAV,GACzB,OACE,cAAC,IAAD,CAAMX,GAAI,YAAcW,EAAQW,GAAhC,SACE,cAAC,EAAD,CAAgBX,QAASA,KADcA,EAAQW,U,gBCCrDC,E,4JACJ,WACE,MAA2BC,KAAK1B,MAAxBsB,EAAR,EAAQA,SACR,OADA,EAAkB1B,KACRe,IAGR,qBAAKV,UAAU,sBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CAAaqB,SAAUA,MAEzB,qBAAKrB,UAAU,8BARC,cAAC,IAAD,CAAUC,GAAG,gB,GAHfyB,aA4BTC,cACbrC,aATsB,SAACc,GAEvB,MAAO,CACLiB,SAAUjB,EAAMwB,UAAUC,QAAQR,SAClC1B,KAAMS,EAAMC,SAASV,SAMvBmC,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAY,WAHrCL,CAKbH,GCMaG,cACbrC,aAZsB,SAACc,EAAO6B,GAE9B,IAAIV,EAAKU,EAASC,MAAMC,OAAOZ,GACzBF,EAAWjB,EAAMwB,UAAUQ,KAAKf,SAEtC,MAAO,CACLT,QAFcS,EAAWA,EAASE,GAAM,KAGxC5B,KAAMS,EAAMC,SAASV,SAMvBmC,2BAAiB,CAAC,CAChBC,WAAY,cAHDJ,EA3CQ,SAAC5B,GACtB,IAAQa,EAAiBb,EAAjBa,QACR,OADyBb,EAATJ,KACPe,IAGLE,EAEA,qBAAKZ,UAAU,oCAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,aAAhB,SAA8BY,EAAQC,QACtC,4BAAID,EAAQyB,aAEd,sBAAKrC,UAAU,uCAAf,UACE,6CAAgBY,EAAQE,gBAAxB,IAA0CF,EAAQG,kBAClD,gCACEH,EAAQI,UACJC,IAAOL,EAAQI,UAAUE,UAAUC,WACnC,gBAHN,eAUN,qBAAKnB,UAAU,mBAAf,SACE,qDAvBI,cAAC,IAAD,CAAUC,GAAG,UAAb,kB,QCLNqC,E,4MACJlC,MAAQ,CACNmC,MAAO,GACPC,SAAU,I,EAEZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrB,GAAKmB,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKhD,MAAMiD,OAAO,EAAK5C,Q,4CAEzB,WACE,MAAyBqB,KAAK1B,MAAvBkD,EAAP,EAAOA,UACP,OADA,EAAkBtD,KACVe,IAAY,cAAC,IAAD,CAAUT,GAAG,MAE/B,qBAAKD,UAAU,YAAf,SACE,uBAAMA,UAAU,QAAQkD,SAAUzB,KAAKqB,aAAvC,UACE,oBAAI9C,UAAU,0BAAd,qBACA,sBAAKA,UAAU,cAAf,UACE,uBAAOmD,QAAQ,QAAf,mBACA,uBAAOrD,KAAK,QAAQyB,GAAG,QAAQ6B,SAAU3B,KAAKgB,kBAEhD,sBAAKzC,UAAU,cAAf,UACE,uBAAOmD,QAAQ,WAAf,sBACA,uBAAOrD,KAAK,WAAWyB,GAAG,WAAW6B,SAAU3B,KAAKgB,kBAEtD,qBAAKzC,UAAU,cAAf,SACE,wBAAQA,UAAU,iCAAlB,qBAEF,qBAAKA,UAAU,kBAAf,SACMiD,EAAY,4BAAIA,IAAiB,gB,GAjC5BvB,aAsDNpC,eAZS,SAACc,GACvB,MAAM,CACJ6C,UAAW7C,EAAMT,KAAKsD,UACtBtD,KAAMS,EAAMC,SAASV,SAGE,SAACJ,GAC1B,MAAO,CACLyD,OAAQ,SAACK,GAAD,OAAW9D,GPtDA+D,EOsDgBD,EPrD7B,SAAE9D,EAAWE,EAAb,IACaC,EAD4B,EAAhBA,eAElBC,OAAO4D,2BACZD,EAAYf,MACZe,EAAYd,UACd3C,MAAK,WACHN,EAAS,CAAEO,KAAM,qBAClB0D,OAAM,SAACC,GACNlE,EAAS,CAAEO,KAAM,cAAe2D,cATtB,IAACH,MO0DRhE,CAA4CgD,GCtDrDoB,E,4MACJtD,MAAQ,CACNmC,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAGZnB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrB,GAAKmB,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKhD,MAAM8D,OAAO,EAAKzD,Q,4CAEzB,WACE,MAA0BqB,KAAK1B,MAAvBJ,EAAR,EAAQA,KAAMsD,EAAd,EAAcA,UACd,OAAGtD,EAAKe,IACD,cAAC,IAAD,CAAUT,GAAG,MAElB,qBAAKD,UAAU,YAAf,SACE,uBAAMA,UAAU,QAAQkD,SAAUzB,KAAKqB,aAAvC,UACE,oBAAI9C,UAAU,0BAAd,qBACA,sBAAKA,UAAU,cAAf,UACE,uBAAOmD,QAAQ,QAAf,mBACA,uBAAOrD,KAAK,QAAQyB,GAAG,QAAQ6B,SAAU3B,KAAKgB,kBAEhD,sBAAKzC,UAAU,cAAf,UACE,uBAAOmD,QAAQ,WAAf,sBACA,uBAAOrD,KAAK,WAAWyB,GAAG,WAAW6B,SAAU3B,KAAKgB,kBAEtD,sBAAKzC,UAAU,cAAf,UACE,uBAAOmD,QAAQ,YAAf,wBACA,uBAAOrD,KAAK,OAAOyB,GAAG,YAAY6B,SAAU3B,KAAKgB,kBAEnD,sBAAKzC,UAAU,cAAf,UACE,uBAAOmD,QAAQ,WAAf,uBACA,uBAAOrD,KAAK,OAAOyB,GAAG,WAAW6B,SAAU3B,KAAKgB,kBAElD,qBAAKzC,UAAU,cAAf,SACE,wBAAQA,UAAU,iCAAlB,qBAEF,qBAAKA,UAAU,kBAAf,SACMiD,EAAY,4BAAIA,IAAiB,gB,GA7C5BvB,aAkENpC,eAZS,SAACc,GACvB,MAAM,CACNT,KAAMS,EAAMC,SAASV,KACrBsD,UAAW7C,EAAMT,KAAKsD,cAIG,SAAC1D,GAC1B,MAAO,CACLsE,OAAQ,SAACR,GAAD,OAAW9D,GRpCAuE,EQoCgBT,ERnC9B,SAAC9D,EAAUE,EAAX,GAAsD,IAAhCC,EAA+B,EAA/BA,YAAaqE,EAAkB,EAAlBA,aAClC1D,EAAWX,IACXkC,EAAYmC,IAElB1D,EAASV,OAAOqE,+BACdF,EAAQvB,MACRuB,EAAQtB,UACR3C,MAAK,SAAAoE,GACL,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAAKE,KAAKzD,KAAK0D,IAAI,CAC1DC,UAAWP,EAAQO,UACnBC,SAAUR,EAAQQ,SAClBC,SAAUT,EAAQO,UAAU,GAAKP,EAAQQ,SAAS,QAEnDzE,MAAK,WACNN,EAAS,CAAEO,KAAM,sBAChB0D,OAAM,SAACC,GACRlE,EAAS,CAAEO,KAAM,eAAgB2D,cAjBjB,IAACK,MQuCRxE,CAA4CoE,G,QCjErDc,E,4MACJpE,MAAQ,CACNS,MAAO,GACPwB,QAAS,GACTvB,gBAAiB,GACjBC,eAAgB,I,EAElB0B,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOrB,GAAKmB,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKhD,MAAM0E,cAAc,EAAKrE,OAC9B,EAAKL,MAAM2E,QAAQC,KAAK,M,4CAI1B,WAEE,OADelD,KAAK1B,MAAZJ,KACCe,IAGP,qBAAKV,UAAU,YAAf,SACE,uBAAMA,UAAU,QAAQkD,SAAUzB,KAAKqB,aAAvC,UACE,oBAAI9C,UAAU,0BAAd,kCACA,sBAAKA,UAAU,cAAf,UACE,uBAAOF,KAAK,OAAOyB,GAAG,QAAQqD,UAAQ,EAACxB,SAAU3B,KAAKgB,eACtD,uBAAOU,QAAQ,QAAf,8BAEF,sBAAKnD,UAAU,cAAf,UACE,0BAAUuB,GAAG,UAAUqD,UAAQ,EAAC5E,UAAU,uBAAuBoD,SAAU3B,KAAKgB,eAChF,uBAAOU,QAAQ,UAAf,gCAGF,sBAAKnD,UAAU,cAAf,UACE,uBAAOF,KAAK,OAAOyB,GAAG,kBAAkBqD,UAAQ,EAACxB,SAAU3B,KAAKgB,eAChE,uBAAOU,QAAQ,kBAAf,kCAGF,sBAAKnD,UAAU,cAAf,UACE,uBAAOF,KAAK,OAAOyB,GAAG,iBAAiBqD,UAAQ,EAACxB,SAAU3B,KAAKgB,eAC/D,uBAAOU,QAAQ,iBAAf,iCAEF,qBAAKnD,UAAU,cAAf,SACE,wBAAQA,UAAU,uBAAlB,2BAxBA,cAAC,IAAD,CAAUC,GAAG,UAAb,mB,GAvBgByB,aAoE1BpC,eAbsB,SAACc,GACvB,MAAM,CACNT,KAAMS,EAAMC,SAASV,SAII,SAACJ,GAC1B,MAAO,CACLkF,cAAe,SAAC7D,GAAD,OAAarB,ECpEH,SAACqB,GAC5B,OAAO,SAACrB,EAAUE,EAAX,IAEasE,EAF2B,EAAlBA,gBAKjBhC,WAAW,YAAY8C,IAAjC,2BACKjE,GADL,IAGEI,UAAW,IAAI8D,QACdjF,MAAK,WACNN,EAAS,CAAEO,KAAM,8BAChB0D,OAAM,SAAAC,GACPlE,EAAS,CAAEO,KAAM,wBAA0B2D,ODuDRgB,CAAc7D,QAKrDtB,CAA6CkF,GEhDhCO,MAjBf,WACI,OACA,cAAC,IAAD,UACA,sBAAK/E,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,IAAIC,UAAW1D,IACjC,cAAC,IAAD,CAAOyD,KAAK,eAAeC,UAAWC,IACtC,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAW5C,IACjC,cAAC,IAAD,CAAO2C,KAAK,UAAUC,UAAWxB,IACjC,cAAC,IAAD,CAAOuB,KAAK,UAAUC,UAAWV,aChBjCY,EAAU,CACZnC,UAAW,MA2CAoC,EAzCK,WAAgC,IAA/BjF,EAA8B,uDAArBgF,EAAUE,EAAW,uCAC/C,OAAOA,EAAOxF,MACV,IAAK,cAED,OADAS,QAAQC,IAAI,gBACL,2BACAJ,GADP,IAEI6C,UAAW,iBAEnB,IAAK,gBAED,OADA1C,QAAQC,IAAI,iBACZ,2BACOJ,GADP,IAEI6C,UAAW,OAGnB,IAAK,kBAED,OADA1C,QAAQC,IAAI,yBACLJ,EAGX,IAAK,iBAED,OADAG,QAAQC,IAAI,yBACZ,2BACOJ,GADP,IAEI6C,UAAW,OAEnB,IAAK,eAED,OADA1C,QAAQC,IAAI,2BACZ,2BACOJ,GADP,IAEI6C,UAAWqC,EAAO7B,IAAI8B,UAI9B,QACI,OAAOnF,ICxCbgF,EAAY,GAeHI,EAbQ,WAAgC,IAA/BpF,EAA8B,uDAAtBgF,EAAWE,EAAW,uCACpD,OAAQA,EAAOxF,MACb,IAAK,yBAEH,OADAS,QAAQC,IAAI,0BACLJ,EACT,IAAK,uBAEH,OADAG,QAAQC,IAAI,wBACLJ,EACT,QACE,OAAOA,I,QCEEqF,EAPKC,YAAgB,CAClC/F,KAAM0F,EACNzE,QAAS4E,EACT5D,UAAW+D,mBACXtF,SAAUuF,oBCANC,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/D,MACvB,2DAIS,SAASgE,IACtB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,WAAwBN,OAAOC,UAC3CM,SAAWP,OAAOC,SAASM,OAIvC,OAGFP,OAAOQ,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMH,WAAN,sBAEPR,IAiDV,SAAiCW,GAE/BC,MAAMD,GACH3G,MAAK,SAAA6G,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CX,UAAUY,cAAcC,MAAMnH,MAAK,SAAAoH,GACjCA,EAAaC,aAAarH,MAAK,WAC7BkG,OAAOC,SAASmB,eAKpBC,EAAgBZ,MAGnBhD,OAAM,WACLjD,QAAQC,IACN,oEArEA6G,CAAwBb,GAIxBL,UAAUY,cAAcC,MAAMnH,MAAK,WACjCU,QAAQC,IACN,gHAMJ4G,EAAgBZ,OAMxB,SAASY,EAAgBZ,GACvBL,UAAUY,cACPb,SAASM,GACT3G,MAAK,SAAAoH,GACJA,EAAaK,cAAgB,WAC3B,IAAMC,EAAmBN,EAAaO,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnH,QACf+F,UAAUY,cAAcW,WAK1BnH,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBgD,OAAM,SAAAmE,GACLpH,QAAQoH,MAAM,4CAA6CA,M,0CCjEjEtH,IAASuH,cAVU,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB9H,IAAS+H,YACT/H,IAASuB,YAAYyG,SAAS,CAACC,uBAAuB,IAEvCjI,QAAf,ECJIkI,EAAMC,YAAY/C,EAAa9D,YACnC8G,YAAgBC,IAAMC,kBAAkB,CAAEjJ,0BAAaqE,+BACvD6E,yBAAeC,GACfC,6BAAmBD,EAAU,CAACE,wBAAwB,EAAMC,YAAa,QAAQC,mBAAmB,MAGtGV,EAAMW,oBAAoBrJ,MAAK,WAC7BsJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUd,MAAOA,EAAjB,SAAwB,cAAC,EAAD,QAE1Be,SAASC,eAAe,SAG1BC,S","file":"static/js/main.9c3874d2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {signout} from '../../actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        \r\n        <li><NavLink to='/' >Settings\r\n          </NavLink></li>\r\n          <li><a onClick={props.signout} className=\"btn waves-effect orange\">Log Out</a></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signout: () => dispatch(signout())\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) =>{\r\n    return( dispatch , getState , {getFirebase}) =>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password    //If this email and password is correct with the signup User then we will login the user \r\n        ).then(()=>{\r\n            dispatch({ type: 'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({ type: 'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const signout = () =>{\r\n    return (dispatch,getState,{getFirebase})=>\r\n    {\r\n        const firebase=getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\r\n        });\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email, \r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection(\"users\").doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      });\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/SignUp'>SignUp</NavLink></li>\r\n        <li><NavLink to='/SignIn'>Log In</NavLink></li>\r\n\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'                 \r\nconst Navbar = (props) => {\r\n    const { auth, profile }=props\r\n    console.log(auth)\r\n    const links= auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\r\n    return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n          <Link to='/' className=\"brand-logo left\">FireWeb</Link>\r\n          { links }\r\n        </div>\r\n        \r\n        \r\n    </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);   //Connect will simply connect to redux and then mapStatetoProps will take the take the state we wanted from reducer and then update it in thus component ","import moment from 'moment'\r\n \r\nconst ProjectSummary = ({project}) => {  //That project is coming from the from dashboirsd we don't have to worry about the fetching \r\n    return (  \r\n        <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title \">{project.title}</span>\r\n          <p>Posted by The {project.authorFirstName} {project.authorLastName}</p>\r\n          <p className=\"grey-text\">{project.createdAt\r\n            ? moment(project.createdAt.toDate()).calendar()\r\n            : \"3rd May, 2020\"} </p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default ProjectSummary;","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n          \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([                   \r\n    { collection: 'projects', orderBy: ['createdAt','desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst ProjectDetails = (props) => {\r\n  const { project,auth } = props;\r\n  if(!auth.uid)\r\n    return  <Redirect to='/signin'> </Redirect>\r\n    \r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{\r\n              project.createdAt\r\n                ? moment(project.createdAt.toDate()).calendar()\r\n                : \"3rd May, 2020\"} </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  let id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects',\r\n\r\n  }])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { signIn } from '../../actions/authActions'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const {authError, auth}= this.props\r\n    if(auth.uid) return <Redirect to='/'  />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn orange lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n          <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n \r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { signUp } from '../../actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstname: '',\r\n    lastname: '',\r\n\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)   //Now this state has been called for signUp \r\n  }\r\n  render() {\r\n    const { auth, authError }=this.props  //The auth is coming from an action creater which is not of this compoenent\r\n    if(auth.uid)\r\n    return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstname\">First Name</label>\r\n            <input type=\"text\" id='firstname' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastname\">Last Name</label>\r\n            <input type=\"text\" id='lastname' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn orange lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n          <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n  auth: state.firebase.auth , //If this have UID then logged in else logged Out \r\n  authError: state.auth.authError\r\n  }\r\n}   //This thing is for redirecting now\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    authorFirstName: '',\r\n    authorLastName: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { auth }=this.props;\r\n    if(!auth.uid)\r\n    return  <Redirect to='/signin'> </Redirect>\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' required onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" required className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='authorFirstName' required onChange={this.handleChange} />\r\n            <label htmlFor=\"authorFirstName\">Author First Name</label>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='authorLastName' required onChange={this.handleChange} />\r\n            <label htmlFor=\"authorLastName\">Author Last Name</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn orange lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n  auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))    //So whenever we press the button then it will go to createProject function as an parameter in projectAction\r\n  }\r\n}\r\n\r\nexport default \r\n  connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n  ","export const createProject = (project) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    //We have an user signed in so its profile will help ous to store author first name as well as last name....so it's presently store in state\r\n    \r\n    firestore.collection('projects').add({\r\n      ...project,\r\n\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};","import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport React from 'react'\nimport  Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nfunction App() {\n    return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n      <Route exact path='/' component={Dashboard} />\n      <Route path='/project/:id' component={ProjectDetails} />\n      <Route path='/signin' component={SignIn} />\n      <Route path='/signup' component={SignUp} />\n      <Route path='/create' component={CreateProject} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App; \n","//Reducers names start with small letter \r\n//In reducer we'll pass two parameter to function\r\nconst initState={\r\n    authError: null\r\n}\r\nconst authReducer = (state  = initState,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login failed')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Sign Out successfully')\r\n            return state\r\n\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signed In Sucessfully')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signed Out Successfully')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n    \r\n        default:\r\n            return state\r\n    }\r\n     \r\n}\r\n\r\n\r\nexport default authReducer","const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';      //It will help to take state of authentication from the user and put it in firebase\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,  //This will help ouse to take auth status \r\n});\r\n\r\nexport default rootReducer\r\n\r\n// the key name will be the data property on the state object","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'  //This will import database to our file\r\nimport 'firebase/auth'\r\nimport 'firebase/analytics'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAi4k1gTMqxHq7BLkqxCznUoiJvegyMqCA\",\r\n    authDomain: \"fireweb-f3c61.firebaseapp.com\",\r\n    projectId: \"fireweb-f3c61\",\r\n    storageBucket: \"fireweb-f3c61.appspot.com\",\r\n    messagingSenderId: \"694615333634\",\r\n    appId: \"1:694615333634:web:e9c591636d7ac35754c01b\",\r\n    measurementId: \"G-W1H30NHGKQ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);  //This thing help react project connect to firebase project\r\n  firebase.analytics();\r\n  firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux'\nimport rootReducer from './reducers/rootReducer';\nimport { Provider } from 'react-redux'\nimport registerServiceWorker from './registerServiceWorker';\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, compose } from 'redux'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'                  \n\nconst store=createStore(rootReducer, compose(   \n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})),  \n  reduxFirestore(fbConfig),\n  reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users',attachAuthIsReady: true})   //The firebase reducer which is synching with firestore don't know the collection in which we are going for making user profile\n  ));   \n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}><App /></Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n    \n  );\n  registerServiceWorker();\n})\n\n\n\n                      \n"],"sourceRoot":""}